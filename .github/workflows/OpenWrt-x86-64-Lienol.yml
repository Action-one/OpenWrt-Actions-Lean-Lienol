
name: OpenWrt-x86-64-Lienol

on:
# 定时触发(每天早4点)
  schedule:
    - cron: 0 20 * * *

# release触发
  release:
    types: [published]

# 点赞触发
#  watch:
#    types: [started]

# 编辑触发
#  push:
#    branches: 
#      - master

# config触发
#  paths:
#    - 'x86_64.config'

#SSH_ACTIONS 开启SSH连接
#UPLOAD_BIN_DIR上传BIN目录
#UPLOAD_FIRMWARE上传固件目录

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  DIY_SH: OpenWrt-x86-64-Lienol.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    name: 编译OpenWrt固件
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04

    steps:
    - name: 校验本地文件
      uses: actions/checkout@v2

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
        df -h

    - name: 克隆源代码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 生成编译时间
      run: |
        echo "::set-env name=FILENAME::$(date "+%Y_%m_%d_%H_%M_%S")"

    - name: 更新源并创建配置文件
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: 开启SSH远程连接
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: 上传BIN目录
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_Lienol_${{ env.FILENAME }}
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i mv -f {} ./artifact/

    - name: 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_firmware_Lienol_${{ env.FILENAME }}
        path: ./artifact/
